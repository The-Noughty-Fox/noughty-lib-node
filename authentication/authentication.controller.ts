import {
    Controller,
    Post,
    UseGuards,
    UsePipes,
    Req, Inject
} from "@nestjs/common";
import {AppleAuthenticationGuard} from "./apple/apple.authentication.guard";
import {InjectableToken} from "../injectable.token";
import {AuthenticationParams} from "./authentication.module";
import {CreateUserDto} from "./dto/createuser.dto";

@Controller('auth')
export class AuthenticationController<User> {

    constructor(
        @Inject(InjectableToken.AUTH_PARAMS)
        private authParams: AuthenticationParams
    ) {}

    @UseGuards(AppleAuthenticationGuard)
    @UsePipes()
    @Post('apple')
    async authenticate(@Req() req): Promise<User> {
        if (req.user && req.user.id) {
            req.session = { userId: req.user.id }
            return req.user
        }
        return Promise.reject('Authentication failed')
    }

    // @UseGuards(AppleAuthenticationGuard)
    @UsePipes()
    @Post('apple_test')
    async authenticateTest(@Req() req): Promise<User> {
        const dto = new CreateUserDto()
        const now = Date.now().toString()
        dto.email = `autogenerated_${now}@thenoughtyfox.com`
        dto.username = `Noughty_Tester_${now}`
        const user = await this.authParams.userService.create(dto)
        req.session = { userId: user.id }
        return req.session
    }
}
